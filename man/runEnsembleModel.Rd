% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FuseMultiModels.R
\name{runEnsembleModel}
\alias{runEnsembleModel}
\title{costCurve - Create a cost curve for weighting classes using different weights}
\usage{
runEnsembleModel(population, dataList, modelList, testSplit = "time",
  testFraction = 0.25, splitSeed = NULL, nfold = 3, analysisId = NULL,
  ensembleStrategy = "mean")
}
\arguments{
\item{population}{The population created using createStudyPopulation() who will be used to develop the model}

\item{testSplit}{Either 'person' or 'time' specifying the type of evaluation used.
'time' find the date where testFraction of patients had an index after the date and assigns patients with an index prior to this date into the training set and post the date into the test set
'person' splits the data into test (1-testFraction of the data) and
train (validationFraction of the data) sets.  The split is stratified by the class label.}

\item{testFraction}{The fraction of the data to be used as the test set in the patient
split evaluation.}

\item{splitSeed}{The seed used to split the test/train set when using a person type testSplit}

\item{nfold}{The number of folds used in the cross validation (default 3)}

\item{ensembleStrategy}{The strategy used for ensembling the outputs from different models, it can be 'mean', 'product' 
and 'linear'(default mean)}

\item{plpData}{An list of object of type \code{plpData} - the patient level prediction
data extracted from the CDM.}

\item{models}{An list of type of base model created using one of the function in final ensembling model:
\itemize{
\item{LRTorch()}{ A logistic regression model}
\item{MLPTorch()}{ A neural network model}
\item{CNNTorch()}{ A convolutional neural network model}
}}

\item{trainFractions}{A list of trainFractions to try}
}
\description{
#'
}
\details{

}
